
/*****此处通过RFPDK软件导出，然后更改每个数组中的参数 *****/
/************************************************************
频点:  433.92Mhz
速率:  2.4Kpbs
频偏:  +/-10Khz
带宽:  +/-100khz
数据包格式:
		0xAAAAAAAAAAAAAAAA + 0x2DD4 +0x15 +"HopeRF RFM COBRFM300A" 

发射功率: 13dBm
**************************************************************/
	unsigned int CMTBank[12] = {
					/*0x0000,
						0x0166,
						0x02EC,
						0x031C,
						0x0470,
						0x0580,
						0x0614,
						0x0708,
						0x0891,
						0x0902,
						0x0A02,
						0x0BD0*/
						0x0000,
						0x0166,
						0x02EC,  
						0x031C,
						0x0470,
						0x0580,
						0x0614,
						0x0708,
						0x0891,
						0x0902,
						0x0A02,
						0x0BD0
					   };
					   
	unsigned int SystemBank[12] = {
					/*0x0CAE,
						0x0DE0,
						0x0E35,  //TX EXIT STATE
						0x0F00,
						0x1000,
						0x11F4,
						0x1210,
						0x13E2,
						0x1442,
						0x1520,
						0x1600,
						0x1781*/
						0x0CAE,
						0x0DF0,
						0x0E35,
						0x0F00,
						0x1000,
						0x11f4,//T1   32
						0x1210,//T1   00
						0x13E2,//T2
						0x1442,//T2
						0x1521,//0:3模式位 //2b
						0x1620,
						0x1781						
						};
	
	unsigned int FrequencyBank[8] = {
					 /* 0x1842,
						0x1971,
						0x1ACE,
						0x1B1C,
						0x1C42,
						0x1D5B,
						0x1E1C,
						0x1F1C*/
						0x1842,
						0x1971,
						0x1ACE,
						0x1B1C,
						0x1C42,
						0x1D5B,
						0x1E1C,
						0x1F1C
							  };
							 
	unsigned int DataRateBank[24] = {
				    0x203F,
						0x21F0,
						0x2263,
						0x2310,
						0x2463,
						0x2512,
						0x260B,
						0x270A,
						0x289F,
						0x296C,
						0x2A29,
						0x2B29,
						0x2CC0,
						0x2D04,
						0x2E01,
						0x2F53,
						0x3020,
						0x3100,
						0x32B4,
						0x3300,
						0x3400,
						0x3501,
						0x3600,
						0x3700
					  /*0x203F,
						0x21F0,
						0x2263,
						0x2310,
						0x2463,
						0x2512,
						0x260B,
						0x270A,
						0x289F,
						0x296C,
						0x2A29,
						0x2B29,
						0x2CC0,
						0x2D04,
						0x2E01,
						0x2F53,
						0x3020,
						0x3100,
						0x32B4,
						0x3300,
						0x3400,
						0x3501,
						0x3600,
						0x3700*/
							};	   
	
	unsigned int BasebandBank[29] = {
						0x380A,  //RX_PREAM_SIZE [4:0] PREAM_LENG_UNIT DATA_MODE [1:0]!!!!!!!!!!!!!!0x380A              RX_PREAM=1  PREAM_UNIT=8
						0x3908,//TX_PREAM_SIZE [7:0]
						0x3A00,//TX_PREAM_SIZE [15:8]
						0x3BAA,//PREAM_VALUE [7:0]
						0x3C04,//RESV SYNC_TOL [2:0]  SYNC_SIZE [2:0]  SYNC_MAN_EN!!!!!!!!!!!!!!
						0x3D00,//SYNC_VALUE [7:0]
						0x3E00,//SYNC_VALUE [15:8]
						0x3F00,//SYNC_VALUE [23:16]
						0x4000,//SYNC_VALUE [31:24]
						0x4100,//SYNC_VALUE [39:32]
						0x42D4,//SYNC_VALUE [47:40]!!!!!!!!!!
						0x432D,//SYNC_VALUE [55:48]!!!!!!
						0x44D2,//SYNC_VALUE [63:56]!!!!!!!
						0x4500,//RESV  PAYLOAD_LENG [10:8]  AUTO_ACK_EN   NODE_LENG_POS_SEL    PAYLOAD_BIT_ORDER    PKT_TYPE
						0x4607,//PAYLOAD_LENG [7:0]
						0x4700,
						0x4800,
						0x4900,
						0x4A00,
						0x4B00,
						0x4C00,
						0x4D00,
						0x4E00,
						0x4F60,
						0x50FF,
						0x5100,
						0x5200,
						0x531F,
						0x5410
					/*0x3812,   //RX_PREAM=2  PREAM_UNIT=8
						0x3908,
						0x3A00,
						0x3BAA,
						0x3C02,
						0x3D00,
						0x3E00,
						0x3F00,
						0x4000,
						0x4100,
						0x4200,
						0x43D4,
						0x442D,
						0x4500,
						0x4607,//数据长度
						0x4700,
						0x4800,
						0x4900,
						0x4A00,
						0x4B00,
						0x4C00,
						0x4D00,
						0x4E00,
						0x4F60,
						0x50FF,
						0x5100,
						0x5200,
						0x531F,
						0x5410	*/					
							};	
	
	unsigned int TXBank[11] = {
						/*0x5550,
						0x560E,
						0x5716,
						0x5800,
						0x5900,
						0x5A30,
						0x5B00,
						0x5C37,
						0x5D0A,
						0x5E7F,
						0x5F7F	*/		
						0x5550,
						0x5626,
						0x5703,
						0x5800,
						0x5942,	
	          0x5AB0,
						0x5B00,
						0x5C37,
						0x5D0A,
						0x5E3F,
						0x5F7F					
							};
							
							void loop_Tx();
							void loop_Rx();













  
  
 


/*****此处通过RFPDK软件导出，然后更改每个数组中的参数 *****/
/************************************************************
频点:  433.92Mhz
速率:  2.4Kpbs
频偏:  +/-10Khz
带宽:  +/-100khz
数据包格式:
		0xAAAAAAAAAAAAAAAA + 0x2DD4 +0x15 +"HopeRF RFM COBRFM300A" 

发射功率: 13dBm
**************************************************************/
	unsigned int CMTBank[12] = {
					  0x0000,
						0x0166,
						0x02EC,
						0x031C,
						0x0470,//f0
						0x0580,
						0x0614,
						0x0708,
						0x0891,
						0x0902,
						0x0A02,
						0x0BD0
						/*0x0000,
						0x0166,
						0x02EC,                                         
						0x031C,
						0x0470,
						0x0580,
						0x0614,
						0x0708,
						0x0891,
						0x0902,
						0x0A02,
						0x0BD0*/
					   };
					   
	unsigned int SystemBank[12] = {
					 /* 0x0CAE,
						0x0DE0,  //RX TIMER EN
						0x0E35,  //TX EXIT STATE
						0x0F00,
						0x1000,
						0x11F4,
						0x1210,
						0x13E2,
						0x1442,
						0x1520,
						0x1600,
						0x1781*/
						0x0CAE,
						0x0DF0,
						0x0E35,
						0x0F00,
						0x1000,
						0x11f4,//T1   32
						0x1210,//T1   00
						0x13E2,//T2
						0x1442,//T2
						0x1521,//0:3模式位 //2b
						0x1620,
						0x1781						
						};
	
	unsigned int FrequencyBank[8] = {
					  0x1842,
						0x1971,
						0x1ACE,
						0x1B1C,
						0x1C42,
						0x1D5B,
						0x1E1C,
						0x1F1C
						 /*0x1842,
						0x1971,
						0x1ACE,
						0x1B1C,
						0x1C42,
						0x1D5B,
						0x1E1C,
						0x1F1C*/
							  };
							 
	unsigned int DataRateBank[24] = {
					  0x203F,
						0x21F0,
						0x2263,
						0x2310,
						0x2463,
						0x2512,
						0x260B,
						0x270A,
						0x289F,
						0x296C,
						0x2A29,
						0x2B29,
						0x2CC0,
						0x2D04,
						0x2E01,
						0x2F53,
						0x3020,
						0x3100,
						0x32B4,
						0x3300,
						0x3400,
						0x3501,
						0x3600,
						0x3700
						/*0x2032,
						0x2118,
						0x2200,
						0x2399,
						0x24C1,
						0x259B,
						0x2606,
						0x270A,
						0x289F,
						0x2939,
						0x2A29,
						0x2B29,
						0x2CC0,
						0x2D51,
						0x2E2A,
						0x2F53,
						0x3000,
						0x3100,
						0x32B4,
						0x3300,
						0x3400,
						0x3501,
						0x3600,
						0x3700*/
							};	   
	
	unsigned int BasebandBank[29] = {
					0x380A,
						0x3908,
						0x3A00,
						0x3BAA,
						0x3C04,
						0x3D00,
						0x3E00,
						0x3F00,
						0x4000,
						0x4100,
						0x42D4,
						0x432D,
						0x44D2,
						0x4500,
						0x4607,//数据长度
						0x4700,
						0x4800,
						0x4900,
						0x4A00,
						0x4B00,
						0x4C00,
						0x4D00,
						0x4E00,
						0x4F60,
						0x50FF,
						0x5100,
						0x5200,
						0x531F,
						0x5410
						/*	0x380A,
						0x3908,
						0x3A00,
						0x3BAA,
						0x3C04,
						0x3D00,
						0x3E00,
						0x3F00,
						0x4000,
						0x4100,
						0x42D4,
						0x432D,
						0x44D2,
						0x4500,
						0x4607,//数据长度
						0x4700,
						0x4800,
						0x4900,
						0x4A00,
						0x4B00,
						0x4C00,
						0x4D00,
						0x4E00,
						0x4F60,
						0x50FF,
						0x5100,
						0x5200,
						0x531F,
						0x5410		*/				
							};	
	
	unsigned int TXBank[11] = {
							0x5550,
						0x560E,
						0x5716,
						0x5800,
						0x5900,
						0x5A30,
						0x5B00,
						0x5C37,
						0x5D0A,
						0x5E7F,
						0x5F7F	
					 /* 0x5550,
						0x5626,
						0x5703,
						0x5800,
						0x5942,	
	          0x5AB0,
						0x5B00,
						0x5C37,
						0x5D0A,
						0x5E3F,
						0x5F7F	*/						
							};
							
							void loop_Tx();
							void loop_Rx();














  
  


/**********************************************************
3-wire spi
**********************************************************/

#include<spi.h>
#include<CMT2300drive.h>

/**********************************************************
**Name: 	vSpi3Init
**Func: 	Init Spi-3 Config
**Note: 	
**********************************************************/
void vSpi3Init(void)
{
	PC_DDR|=0X60;  // PC1 PC5 PC6  //输出低
	PC_CR1|=0X60;
	PC_ODR&=~0X60;
	PD_DDR|=0X01;  //PD0 //输出低
	PD_CR1|=0X01;
	PD_ODR&=~0X01;
	PB_DDR|=0X10;  //PB4 //输出低
	PB_CR1|=0X10;
	PB_ODR&=~0X10;
	
	SetCSB();
	SetFCSB();
	SetSDIO();
	ClrSDCK();
}

/**********************************************************
**Name: 	vSpi3WriteByte
**Func: 	SPI-3 send one byte 发送一位
**Input:    
**Output:  
**********************************************************/
void vSpi3WriteByte(unsigned char dat)
{

 	unsigned char bitcnt;	
 
	SetFCSB();				//FCSB = 1;
 
 	OutputSDIO();			//SDA output mode
 	OutputSDIO();			//SDA output mode
 	SetSDIO();				//    output 1
 
 	ClrSDCK();				
 	ClrCSB();

 	for(bitcnt=8; bitcnt!=0; bitcnt--)
 		{
		ClrSDCK();	
		delay_us(SPI3_SPEED);
 		if(dat&0x80)
 			SetSDIO();
 		else
 			ClrSDIO();
		SetSDCK();
 		dat <<= 1; 		
 		delay_us(SPI3_SPEED);
 		}
 	ClrSDCK();		
 	SetSDIO();
}

/**********************************************************
**Name: 	bSpi3ReadByte
**Func: 	SPI-3 read one byte 读取一位
**Input:
**Output:  
**********************************************************/
unsigned char bSpi3ReadByte(void)
{
	unsigned char RdPara = 0;
 	unsigned char bitcnt;
  
 	ClrCSB(); 
 	InputSDIO();			
  	InputSDIO();		
 	for(bitcnt=8; bitcnt!=0; bitcnt--)
 		{
 		ClrSDCK();
 		RdPara <<= 1;
 		delay_us(SPI3_SPEED);
 		SetSDCK();
 		delay_us(SPI3_SPEED);
 		if(SDIO_H())
 			RdPara |= 0x01;
 		else
 			RdPara |= 0x00;
 		} 
 	ClrSDCK();
 	OutputSDIO();
	OutputSDIO();
 	SetSDIO();
 	SetCSB();			
 	return(RdPara);	
}

/**********************************************************
**Name:	 	vSpi3Write
**Func: 	SPI Write One word
**Input: 	Write word写一个字（16位）高7位是地址，低8位是数据
**Output:	none
**********************************************************/
void vSpi3Write(unsigned int dat)
{
 	vSpi3WriteByte((unsigned char)(dat>>8)&0x7F);
 	vSpi3WriteByte((unsigned char)dat);
 	SetCSB();
}

/**********************************************************
**Name:	 	bSpi3Read
**Func: 	SPI-3 Read One byte
**Input: 	readout addresss   （8位） 首位是读标志，后7位是地址
**Output:	readout byte
**********************************************************/
unsigned char bSpi3Read(unsigned char addr)
{
  	vSpi3WriteByte(addr|0x80);
 	return(bSpi3ReadByte());
}

/**********************************************************
**Name:	 	vSpi3WriteFIFO
**Func: 	SPI-3 send one byte to FIFO 
**Input: 	one byte buffer
**Output:	none
**********************************************************/
void vSpi3WriteFIFO(unsigned char dat)
{
 	unsigned char bitcnt;	
 
 	SetCSB();	
	OutputSDIO();	
	ClrSDCK();
 	ClrFCSB();			//FCSB = 0
	delay_us(SPI3_SPEED);		//Time-Critical  jia 
	delay_us(SPI3_SPEED);		//Time-Critical  jia 
	for(bitcnt=8; bitcnt!=0; bitcnt--)
	{
 		ClrSDCK();
 		
 		if(dat&0x80)
			SetSDIO();		
		else
			ClrSDIO();
		delay_us(SPI3_SPEED);
		SetSDCK();
		delay_us(SPI3_SPEED);
 		dat <<= 1;
	}
 	ClrSDCK();	
 	delay_us(SPI3_SPEED);		//Time-Critical
 	delay_us(SPI3_SPEED);		//Time-Critical
 	SetFCSB();
	SetSDIO();
 	delay_us(SPI3_SPEED);		//Time-Critical
 	//delay_us(SPI3_SPEED);		//Time-Critical
	//delay_us(SPI3_SPEED);		//Time-Critical  jia 
 	//delay_us(SPI3_SPEED);		//Time-Critical  jia
}

/**********************************************************
**Name:	 	bSpi3ReadFIFO
**Func: 	SPI-3 read one byte to FIFO
**Input: 	none
**Output:	one byte buffer
**********************************************************/
unsigned char bSpi3ReadFIFO(void)
{
	unsigned char RdPara;
 	unsigned char bitcnt;	
 	
 	SetCSB();
	InputSDIO();
 	ClrSDCK();
	ClrFCSB();
	delay_us(SPI3_SPEED);		//Time-Critical  jia 
	delay_us(SPI3_SPEED);		//Time-Critical  jia 	
 	for(bitcnt=8; bitcnt!=0; bitcnt--)
	{
 		ClrSDCK();
 		RdPara <<= 1;
 		delay_us(SPI3_SPEED);
		SetSDCK();
		delay_us(SPI3_SPEED);
 		if(SDIO_H())
 			RdPara |= 0x01;		//NRZ MSB
 		else
 		 	RdPara |= 0x00;		//NRZ MSB
	}
 	ClrSDCK();
	OutputSDIO();//我jia
	SetSDIO();//jia
 	delay_us(SPI3_SPEED);		//Time-Critical
 	//delay_us(SPI3_SPEED);		//Time-Critical
 	SetFCSB();
	//OutputSDIO();//我注视
	//SetSDIO();//我注视
 	delay_us(SPI3_SPEED);		//Time-Critical
 	//delay_us(SPI3_SPEED);		//Time-Critical
	//delay_us(SPI3_SPEED);		//Time-Critical  jia
	//delay_us(SPI3_SPEED);		//Time-Critical  jia
 	return(RdPara);
}

/**********************************************************
**Name:	 	vSpi3BurstWriteFIFO
**Func: 	burst wirte N byte to FIFO
**Input: 	array length & head pointer
**Output:	none
**********************************************************/
void vSpi3BurstWriteFIFO(unsigned char ptr[], unsigned char length)
{
 	unsigned char i;
 	if(length!=0x00)
	 	{
 		for(i=0;i<length;i++)
 			vSpi3WriteFIFO(ptr[i]);
 		}
 	return;
}

/**********************************************************
**Name:	 	vSpiBurstRead
**Func: 	burst wirte N byte to FIFO
**Input: 	array length  & head pointer
**Output:	none
**********************************************************/
void vSpi3BurstReadFIFO(unsigned char ptr[], unsigned char length)
{
	unsigned char i;
 	if(length!=0)
 		{
 		for(i=0;i<length;i++)
 			ptr[i] = bSpi3ReadFIFO();
 		}	
 	return;
}
  
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	5.28
	
	
	/*****此处通过RFPDK软件导出，然后更改每个数组中的参数 *****/
/************************************************************
频点:  433.92Mhz
速率:  2.4Kpbs
频偏:  +/-10Khz
带宽:  +/-100khz
数据包格式:
		0xAAAAAAAAAAAAAAAA + 0x2DD4 +0x15 +"HopeRF RFM COBRFM300A" 

发射功率: 13dBm
**************************************************************/
	unsigned int CMTBank[12] = {
					  /*0x0000,
						0x0166,
						0x02EC,
						0x031C,
						0x0470,
						0x0580,
						0x0614,
						0x0708,
						0x0891,
						0x0902,
						0x0A02,
						0x0BD0*/
						0x0000,
						0x0166,
						0x02EC,                                         
						0x031C,
						0x04F0,
						0x0580,
						0x0614,
						0x0708,
						0x0891,
						0x0902,
						0x0A02,
						0x0BD0
					   };
					   
	unsigned int SystemBank[12] = {
					 /* 0x0CAE,
						0x0DE0,
						0x0E35,  //TX EXIT STATE
						0x0F00,
						0x1000,
						0x11F4,
						0x1210,
						0x13E2,
						0x1442,
						0x1520,
						0x1600,
						0x1781*/	
						/*0x0CAE,
						0x0DF0,
						0x0E35,
						0x0F00,
						0x1000,
						0x1132,//T1   32
						0x1200,//T1   00
						0x13E2,//T2
						0x1442,//T2
						0x1521,//0:3模式位 //2b
						0x1620,
						0x1781	*/
            0x0CAE,
						0x0DF0,
						0x0E35,
						0x0F00,
						0x1000,
						0x11F4,//T1   32
						0x1200,//T1   00
						0x13E2,//T2
						0x1442,//T2
						0x152B,//0:3模式位 //2b
						0x1620,
						0x1781						
						};
	
	unsigned int FrequencyBank[8] = {
					  0x1842,
						0x1971,
						0x1ACE,
						0x1B1C,
						0x1C42,
						0x1D5B,
						0x1E1C,
						0x1F1C
						 /*0x1842,
						0x1971,
						0x1ACE,
						0x1B1C,
						0x1C42,
						0x1D5B,
						0x1E1C,
						0x1F1C*/
							  };
							 
	unsigned int DataRateBank[24] = {
					  /*0x203F,
						0x21F0,
						0x2263,
						0x2310,
						0x2463,
						0x2512,
						0x260B,
						0x270A,
						0x289F,
						0x296C,
						0x2A29,
						0x2B29,
						0x2CC0,
						0x2D04,
						0x2E01,
						0x2F53,
						0x3020,
						0x3100,
						0x32B4,
						0x3300,
						0x3400,
						0x3519,//RSSI
						0x3600,
						0x3700*/
						0x2032,
						0x2118,
						0x2200,
						0x2399,
						0x24C1,
						0x259B,
						0x2606,
						0x270A,
						0x289F,
						0x2939,
						0x2A29,
						0x2B29,
						0x2CC0,
						0x2D51,
						0x2E2A,
						0x2F53,
						0x3000,
						0x3100,
						0x32B4,
						0x3300,
						0x3400,
						0x353E,
						0x3600,
						0x3700
							};	   
	
	unsigned int BasebandBank[29] = {
					  /*	0x380A,
						0x3908,
						0x3A00,
						0x3BAA,
						0x3C04,
						0x3D00,
						0x3E00,
						0x3F00,
						0x4000,
						0x4100,
						0x42D4,
						0x432D,
						0x44D2,
						0x4500,
						0x4607,//数据长度
						0x4700,
						0x4800,
						0x4900,
						0x4A00,
						0x4B00,
						0x4C00,
						0x4D00,
						0x4E00,
						0x4F60,
						0x50FF,
						0x5100,
						0x5200,
						0x531F,
						0x5410	*/	
						0x38fa,
						0x3908,
						0x3A00,
						0x3BAA,
						0x3C02,
						0x3D00,
						0x3E00,
						0x3F00,
						0x4000,
						0x4100,
						0x4200,
						0x43D4,
						0x442d,
						0x4500,
						0x4607,//数据长度
						0x4700,
						0x4800,
						0x4900,
						0x4A00,
						0x4B00,
						0x4C00,
						0x4D00,
						0x4E00,
						0x4F60,
						0x50FF,
						0x5100,
						0x5200,
						0x531F,
						0x5410				
							};	
	
	unsigned int TXBank[11] = {
						/* 	0x5550,
						0x560E,
						0x5716,
						0x5800,
						0x5900,
						0x5A30,
						0x5B00,
						0x5C37,
						0x5D0A,
						0x5E7F,
						0x5F7F	*/
					  0x5550,
						0x5626,
						0x5703,
						0x5800,
						0x5942,	
	          0x5AB0,
						0x5B00,
						0x5C37,
						0x5D0A,
						0x5E3F,
						0x5F7F							
							};
							
							void loop_Tx();
							void loop_Rx();
  
  
  
  
  

